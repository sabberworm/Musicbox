#! /usr/bin/expect

set inc_dir {}
if {[info exists env(MUSICBOX_INSTALL_DIR)]} {
	set inc_dir "$env(MUSICBOX_INSTALL_DIR)/"
}
source "${inc_dir}inc/includes.tcl"
source "${inc_dir}inc/metadata.tcl"

exec find $root_folder ( -name *.mp4 -o -name *.m4a -o -name *.mp3 -o -name *.flac -o -name *.ogg -o -name *.alac ) -printf "%P\\n" > "${inc_dir}music_files"
set find_output [open "${inc_dir}music_files" r]
fconfigure $find_output -buffersize 1024 -buffering line -encoding utf-8

set counter 0
while {-1 != [gets $find_output file_name]} {
	set file_path "$root_folder$file_name"
	
	#Dotfiles including AppleDouble files (new style)
	if {[regexp {^\.} [file tail $file_path]]} {
		continue
	}
	#AppleDouble files (old style)
	if {[regexp {\.AppleDouble} $file_path]} {
		continue
	}
	
	set db_file_path [::mysql::escape $file_name]
	set track_id [::mysql::sel $mysql_handle "SELECT id FROM tracks WHERE relative_path = '$db_file_path';" -list]
	
	if {[catch {array set metadata [get_metadata $file_path]} error]} {
		#ignore offending file
		puts stderr "ERROR $error for file $file_path"
		continue
	}
	if {[array size metadata] > 0} {
		set year $metadata(year)
		set track_number $metadata(track_number)
		set track_name [::mysql::escape $metadata(track_name)]
		set artist_name [::mysql::escape $metadata(artist_name)]
		set album_name [::mysql::escape $metadata(album_name)]
		if {[catch {
			if {[llength $track_id] > 0} {
				::mysql::exec $mysql_handle "UPDATE tracks SET track_name = '$track_name', artist_name = '$artist_name', album_name = '$album_name', year = $year, track_number = $track_number, last_update = NOW(), has_been_updated = 1 WHERE id = $track_id;"
			} else {
				::mysql::exec $mysql_handle "INSERT INTO tracks (relative_path, track_name, artist_name, album_name, year, track_number, last_update, is_playing, has_been_updated) VALUES ('$db_file_path', '$track_name', '$artist_name', '$album_name', $year, $track_number, NOW(), 0, 1);"
			}
		} error]} {
			puts stderr $error
			puts stderr "INSERT INTO tracks (relative_path, track_name, artist_name, album_name, year, track_number, last_update, is_playing, has_been_updated) VALUES ('$db_file_path', '$track_name', '$artist_name', '$album_name', $year, $track_number, NOW(), 0, 1);"
			exit
		}
	}
	
	incr counter
}
close $find_output
exec rm "${inc_dir}music_files"

::mysql::exec $mysql_handle "DELETE FROM tracks WHERE has_been_updated = 0;"
::mysql::exec $mysql_handle "UPDATE tracks SET has_been_updated = 0 WHERE 1;"
puts "Indexed $counter files"

::mysql::close $mysql_handle
