#! /usr/bin/expect

set inc_dir {}
if {[info exists env(MUSICBOX_INSTALL_DIR)]} {
	set inc_dir "$env(MUSICBOX_INSTALL_DIR)/"
}
source "${inc_dir}inc/includes.tcl"

set at_host [get_setting $mysql_handle at_host]
set song_play_block_interval [get_setting $mysql_handle song_play_block_interval]

if {[llength $song_play_block_interval] == 0} {
	set song_play_block_interval 2
}

while true {
	set song_to_play [::mysql::sel $mysql_handle "SELECT tracks.id AS id, relative_path, sum(votes.vote_count) AS vote_count FROM votes JOIN tracks ON tracks.id=votes.track_id WHERE is_unplayable = 0 AND (last_played IS NULL OR last_played < DATE_SUB(NOW(), INTERVAL $song_play_block_interval HOUR)) GROUP BY tracks.id ORDER BY vote_count DESC, last_played ASC, tracks.id ASC LIMIT 1;" -flatlist]
	
	if {[llength $song_to_play] == 0} {
		#Remove votes (could be hanging votes with old IDs)
		::mysql::exec $mysql_handle "DELETE FROM votes WHERE 1;"
		puts "Nothing to play, wait 20 seconds"
		sleep 20
		continue
	}

	set track_id [lindex $song_to_play 0]
	
	set song_path $root_folder[lindex $song_to_play 1]
	
	if {![file exists $song_path]} {
		#Remove track
		::mysql::exec $mysql_handle "DELETE FROM votes WHERE track_id = $track_id;DELETE FROM tracks WHERE id = $track_id;"
	}
	
	#unset all
	::mysql::exec $mysql_handle "UPDATE tracks SET is_playing = 0 WHERE 1;"
	::mysql::exec $mysql_handle "UPDATE tracks SET is_playing = 1 WHERE id = $track_id;"
	
	spawn raop_play $at_host $song_path
	
	while true {
		expect "ERR: find_atom_pos" {
			#error is non-critical, do nothing
		} "INFO: fd_event_callback: read, disconnected on the other end" {
			#reset votes
			::mysql::exec $mysql_handle "DELETE FROM votes WHERE track_id = $track_id;UPDATE tracks SET last_played = NOW() WHERE id = $track_id;"
			break
		} "ERR: errror: auds_open" {
			#File is not playable, path does not exist or file has wrong format -> remove votes, mark it and start over
			::mysql::exec $mysql_handle "DELETE FROM votes WHERE track_id = $track_id;UPDATE tracks SET is_unplayable = 1 WHERE id = $track_id;"
			break
		} "ERR:" {
			puts stderr "ERROR playing file, waiting 20 seconds"
			sleep 20
			break
		}
	}
	::mysql::exec $mysql_handle "UPDATE tracks SET is_playing = 0 WHERE id = $track_id;"
}
::mysql::close $mysql_handle
